<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>ArgumentListWrapping:ChartScreen.kt$(modifier = Modifier .fillMaxSize() .pointerInput(Unit) { detectTapGestures(onLongPress = { chartViewModel.onRefreshPress() }, onTap = { chartViewModel.onRefreshPress() }) })</ID>
    <ID>ArgumentListWrapping:ChartScreen.kt$(modifier = Modifier .onRotaryScrollEvent { coroutineScope.launch { state.scrollBy(it.verticalScrollPixels) state.animateScrollBy(0f) } true } .focusRequester(focusRequester) .focusable() .fillMaxSize() .pointerInput(Unit) { detectTapGestures(onLongPress = { chartViewModel.onRefreshPress() }) }, state = state )</ID>
    <ID>ArgumentListWrapping:ChartViewModel.kt$( month = LocalDate(year, month, 1).month.name.substring(0, 1).toUpperCase() + LocalDate( year, month, 1 ).month.name.substring(1).toLowerCase(), year = year, contributions = monthStats["${year}-${month}"]?.sumOf { it.contributionCount } ?: 0)</ID>
    <ID>ArgumentListWrapping:StatisticsRepositoryImpl.kt$( contributionDays = this.contributionDays.map { DayStatistic( weekDay = it.weekday, contributionCount = it.contributionCount, contributionLevel = it.contributionLevel.name, date = LocalDate.parse(it.date.toString()), color = it.color ) }, firstDay = LocalDate.parse(this.firstDay.toString()) )</ID>
    <ID>ArgumentListWrapping:StatisticsRepositoryImpl.kt$( firstDay = firstDay.date, contributionDays = this.contributionDays.filter { it.date.monthNumber == firstDay.date.monthNumber })</ID>
    <ID>ArgumentListWrapping:StatisticsRepositoryImpl.kt$(firstDay = this.contributionDays.first { it.date.monthNumber != firstDay.date.monthNumber }.date, contributionDays = this.contributionDays.filter { it.date.monthNumber != firstDay.date.monthNumber })</ID>
    <ID>ArgumentListWrapping:WeekRow.kt$WeekStatisticsProvider$( DayStatistic( weekDay = 0, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 0, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 0, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 0, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 0, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 5, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 6, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#ffffff" ) )</ID>
    <ID>ArgumentListWrapping:WeekRow.kt$WeekStatisticsProvider$( contributionDays = listOf( DayStatistic( weekDay = 0, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 0, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 0, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 0, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 0, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 5, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 6, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#ffffff" ) ), firstDay = LocalDate.parse("2003-02-02") )</ID>
    <ID>ExplicitItLambdaParameter:ChartViewModel.kt${ index, it -&gt; val firstDay = it.firstDay if (index == this.weeks.size - 1) { rowItemModels.add(RowItemModel.WeekItemModel(it)) rowItemModels.add(getMonthStatistics(firstDay, groupByMonth, isCurrentMonth = true)) } else { if (firstDay.dayOfMonth == 1) { rowItemModels.add(getMonthStatistics(firstDay, groupByMonth)) rowItemModels.add(RowItemModel.WeekItemModel(it)) } else { rowItemModels.add(RowItemModel.WeekItemModel(it)) } } }</ID>
    <ID>MagicNumber:ChartViewModel.kt$12</ID>
    <ID>MagicNumber:WeekRow.kt$6</ID>
    <ID>MagicNumber:WeekRow.kt$WeekStatisticsProvider$2003</ID>
    <ID>MaxLineLength:WeekRow.kt$text = "${monthHeaderItemModel.monthStatistic.month}, ${monthHeaderItemModel.monthStatistic.year}: ${monthHeaderItemModel.monthStatistic.contributions}"</ID>
    <ID>MaximumLineLength:WeekRow.kt$ </ID>
    <ID>StringTemplate:ChartViewModel.kt$${month}</ID>
    <ID>StringTemplate:ChartViewModel.kt$${year}</ID>
    <ID>SwallowedException:RemoteStatisticsDataSource.kt$RemoteStatisticsDataSource$exeption: Exception</ID>
    <ID>TooGenericExceptionCaught:RemoteStatisticsDataSource.kt$RemoteStatisticsDataSource$exeption: Exception</ID>
    <ID>UnusedPrivateProperty:RemoteStatisticsDataSource.kt$RemoteStatisticsDataSource$private val api: StatisticsApi</ID>
    <ID>UnusedPrivateProperty:WeekRow.kt$val boxWithConstraintsScope = this</ID>
    <ID>Wrapping:ChartScreen.kt$(</ID>
    <ID>Wrapping:ChartViewModel.kt$(</ID>
    <ID>Wrapping:StatisticsRepositoryImpl.kt$(</ID>
    <ID>Wrapping:StatisticsRepositoryImpl.kt$( contributionDays = this.contributionDays.map { DayStatistic( weekDay = it.weekday, contributionCount = it.contributionCount, contributionLevel = it.contributionLevel.name, date = LocalDate.parse(it.date.toString()), color = it.color ) }, firstDay = LocalDate.parse(this.firstDay.toString()) )</ID>
    <ID>Wrapping:WeekRow.kt$WeekStatisticsProvider$( DayStatistic( weekDay = 0, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 0, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 0, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 0, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 0, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 5, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 6, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#ffffff" ) )</ID>
    <ID>Wrapping:WeekRow.kt$WeekStatisticsProvider$( contributionDays = listOf( DayStatistic( weekDay = 0, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 0, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 0, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 0, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 0, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 5, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#40c463" ), DayStatistic( weekDay = 6, contributionCount = 1, contributionLevel = "FIRST", date = LocalDate(2003, 2, 2), color = "#ffffff" ) ), firstDay = LocalDate.parse("2003-02-02") )</ID>
  </CurrentIssues>
</SmellBaseline>
